<?php !defined('YOUNG_TEAM') AND exit('Access Denied!');

define('PERM_READ',           1);
define('PERM_ADD',            2);
define('PERM_EDIT',           4);
define('PERM_DELETE',         8);
define('PERM_MANAGE',         16);
define('PERM_COMPLETE',       32);
define('PERM_REFUND',         64);
define('PERM_CONFIRM',        128);

class ModelPermissionMain
{
	const READ 		= PERM_READ;
	const ADD 		= PERM_ADD;
	const EDIT 		= PERM_EDIT;
    const DELETE    = PERM_DELETE;
    const MANAGE    = PERM_MANAGE;
    const COMPLETE  = PERM_COMPLETE;
    const REFUND    = PERM_REFUND;
	const CONFIRM 	= PERM_CONFIRM;

	static protected $PermissionDict = array(
		self::READ 		=> '读取',
		self::ADD 		=> '添加',
		self::EDIT 		=> '修改',
        self::DELETE    => '删除',
        self::MANAGE    => '管理',
        self::COMPLETE  => '完成',
        self::REFUND    => '退款',
		self::CONFIRM 	=> '核消',
	);


    static protected $Settings = array(
    	'main-contents' => array(
    		'text' 	 => '运营内容',
    		'values' => array(self::READ, self::ADD, self::EDIT, self::DELETE)
    	),
    	'orders' 	    => array(
    		'text' 	 => '订单管理',
    		'values' => array(self::READ, self::EDIT, self::CONFIRM, self::COMPLETE, self::REFUND)
    	),
    	'users' 		=> array(
    		'text' 	 => '用户管理',
    		'values' => array(self::READ, self::ADD, self::EDIT, self::DELETE)
    	),
        'groups'        => array(
            'text'   => '用户组管理',
            'values' => array(self::READ, self::ADD, self::EDIT, self::DELETE)
        )
    );

    private $fields = array(
    	'gid' 		=> '',
    	'privilege'	=> array()
    );

    private $allowed = array(
        'name', 
        'description',
        'privilege',
        'statu'
    );

    public function collection() {
        return SwimAdmin::db('group');
    }

    public function insert($data) {
        $collection = $this->collection();
        $data = Helper::allowed($data, $this->allowed);
        $data['created_by'] = $_SESSION[S_USER];
        $data['create_time'] = time();
        $result = $collection->insert($data);
        return $result;
    }

    public function update($data, $id) {
        $collection = $this->collection();
        $id = new MongoId($id);
        $data = Helper::allowed($data, $this->allowed);
        $data['modified_by'] = $_SESSION[S_USER];
        $data['modified_on'] = time();
        $result = $collection->update(array('_id' => $id), array('$set' => $data));
        return $result;
    }

    public function deleteById($ids) {
        $ids = (array)$ids;
        for($idx=0, $l=sizeof($ids); $idx<$l; $idx++) {
            $ids[$idx] = new MongoId($ids[$idx]);
        }
        $collection = $this->collection();
        $result = $collection->remove(array(
            '_id' => array('$in' => $ids)
        ));
        return $result;
    }

    public function getPermissionSettings() {
        return self::$Settings;
    }

    public function getPermissionDict() {
        return self::$PermissionDict;
    }

    public function getPermission($user) {
    	$user       = SwimAdmin::model('user.main')->getUserByUsername($user);
        $privileges = null;
        if($user && $user['active']) {
            if(isset($user['group'])) {
                if($user['group'] == -1) {
                    // 默认管理员帐号, 取全部权限
                    foreach(self::$Settings as $mod => $vals) {
                        $value = 0;
                        foreach($vals as $val) {
                            $value += intval($val);
                        }
                        $privileges[$mod] = $value;
                    }
                } else if(is_array($user['group'])) {
                    $gids       = array();
                    foreach($user['group'] as $gid) {
                        $gids[] = new MongoId($gid);
                    }
                    $privileges = $this->getPermissionByGids($gids);
                }
            }
        }

    	return $privileges;
    }

    public function getPermissionByGids($gids) {
        $privileges = null;
        if($gids) {
            $privileges = array();
            $collection = $this->collection();
            $gids       = (array)$gids;
            $groups     = $collection->find(array(
                '_id' => array('$in' => $gids)
            ));
            foreach($groups as $group) {
                if($group['statu'] == 1) {
                    foreach($group['privilege'] as $mod => $val) {
                        if(!isset($privileges[$mod])) {
                            $privileges[$mod] = 0;
                        }
                        $privileges[$mod] = $privileges[$mod] | $val;
                    }
                }
            }
        }
        return $privileges;
    }

    public function getGroups() {
        $collection = $this->collection();
        $result     = $collection->find()->sort(array(
            'statu' => -1,
            'name'  => 1,
        ));
        $groups     = array();
        foreach($result as $group) {
            $gid          = (string)$group['_id'];
            $groups[$gid] = $group;
            unset($groups[$gid]['_id']);
        }
        return $groups;
    }


    public function getOneById($id) {
        $collection = $this->collection();
        $row = $collection->findOne(array('_id' => new MongoId($id)));
        return $row;
    }

    public function pagination($url = '', $pnValue = null) {
        $params  = Helper::parseQueryString($url? $url: $_SERVER['REQUEST_URI']);
        $pn      = Helper::popValue($params, 'pn', 1);
        $sort    = Helper::popValue($params, 'sort', 'name');
        $order   = Helper::popValue($params, 'order', 1);
        $filters = array();
        $data = SwimAdmin::pagination(
            $url,
            $this->collection(),
            is_null($pnValue)? $pn: $pnValue,
            $filters,
            array($sort => intval($order) > 0? 1: -1)
        );
        return $data;
    }

}